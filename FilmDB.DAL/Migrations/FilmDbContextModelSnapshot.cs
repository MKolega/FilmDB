// <auto-generated />
using System;
using FilmDB.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FilmDB.DAL.Migrations
{
    [DbContext(typeof(FilmDbContext))]
    partial class FilmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FilmDB.Model.Director", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Director");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Bio = "Temp",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/thumb/1/13/George_Miller_%2835706244922%29.jpg/800px-George_Miller_%2835706244922%29.jpg",
                            Name = "George Miller"
                        },
                        new
                        {
                            ID = 2,
                            Bio = "Temp",
                            Image = "https://en.wikipedia.org/wiki/File:Shawn_Levy_by_Gage_Skidmore_2.jpg",
                            Name = "Shawn Levy"
                        },
                        new
                        {
                            ID = 3,
                            Bio = "Temp",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/David_Leitch_by_Gage_Skidmore_2.jpg/330px-David_Leitch_by_Gage_Skidmore_2.jpg",
                            Name = "David Leitch"
                        });
                });

            modelBuilder.Entity("FilmDB.Model.Movies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DirectorID")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DirectorID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Temp",
                            DirectorID = 1,
                            Genre = "Action",
                            Image = "https://m.media-amazon.com/images/M/MV5BNmYzMWVjNmQtNjJjNy00M2Y4LTkzZjQtZWQ5NmYzMjRjMDIzXkEyXkFqcGdeQXVyMTM1NjM2ODg1._V1_FMjpg_UY576_.jpg",
                            Title = "Furiosa: A Mad Max Saga",
                            Year = 2024
                        },
                        new
                        {
                            ID = 2,
                            Description = "Temp",
                            DirectorID = 2,
                            Genre = "Action",
                            Image = "https://m.media-amazon.com/images/M/MV5BN2YxYTFmYTMtZjQ0YS00YTViLTg2OWEtMmM5YzY0YTE4OTU5XkEyXkFqcGdeQXVyMTY3ODkyNDkz._V1_FMjpg_UY720_.jpg",
                            Title = "Deadpool & Wolverine",
                            Year = 2024
                        },
                        new
                        {
                            ID = 3,
                            Description = "Temp",
                            DirectorID = 3,
                            Genre = "Action",
                            Image = "https://m.media-amazon.com/images/M/MV5BMjA5ZjA3ZjMtMzg2ZC00ZDc4LTk3MTctYTE1ZTUzZDIzMjQyXkEyXkFqcGdeQXVyMTM1NjM2ODg1._V1_FMjpg_UY720_.jpg",
                            Title = "Fall Guy",
                            Year = 2024
                        });
                });

            modelBuilder.Entity("FilmDB.Model.Movies", b =>
                {
                    b.HasOne("FilmDB.Model.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("FilmDB.Model.Director", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
